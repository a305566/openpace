language: C

sudo: false

env:
  global:
    - ac_cv_func_malloc_0_nonnull=yes
    - PATH=$PATH:/tmp/js
    - EMSCRIPTEN_ROOT=$TRAVIS_BUILD_DIR/emscripten-sdk/emscripten/master
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "KOfJHBqx3I7GsY6OIiqBMN5iFkTpeGlj+WwXF/ZaGmG7bYtIx1641mH43ECoaxGH6I4Tkdf2VBX3xTSVaCeT8OO0K3Zr84MRqmfjfzTo1uGkwiZD3e/pahPVjOTb+IGPForskeooix6KgCJQfW6skh8EEy7EPnZTNXJw2XLujj4="

matrix:
  include:
    - compiler: clang
      env: CFLAGS=-coverage LDFLAGS=-coverage
    - compiler: gcc
      env: CFLAGS="-fprofile-arcs -ftest-coverage" LDFLAGS=-fprofile-arcs
    - env: TARGET=win WIN_TOOL=i686-w64-mingw32
    - env: TARGET=win WIN_TOOL=x86_64-w64-mingw32
    - env: TARGET=emscripten
  exclude:
    - env: COVERITY_SCAN_BRANCH=1 TARGET!=""
  allow_failures:
    - env: TARGET=win WIN_TOOL=i686-w64-mingw32
    - env: TARGET=win WIN_TOOL=x86_64-w64-mingw32

install:
  - date
  - if [ "${TARGET}" == emscripten ]; then
      wget -P /tmp/j2me.js -N https://ftp.mozilla.org/pub/firefox/nightly/latest-mozilla-central/jsshell-linux-x86_64.zip;
      unzip -d /tmp/js /tmp/j2me.js/jsshell-linux-x86_64.zip;
      export PATH=$PATH;
      git clone --recursive https://github.com/marco-c/emscripten-sdk.git;
      cd emscripten-sdk && ./emsdk activate latest && cd ..;
      source emscripten-sdk/emsdk_env.sh;
    fi
  - make --version
  - uname -a

cache:
  directories:
    - emscripten-sdk
    - src/openssl

before_script:
  - autoreconf -vis
  - ./configure --enable-openssl-install --enable-python --enable-java --enable-ruby --enable-go GCCGOFLAGS="-static-libgcc $CFLAGS" SWIGGOPARAMS=" ";

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - binutils-mingw-w64-i686
      - binutils-mingw-w64-x86-64
      - g++-4.9
      - gcc-mingw-w64-i686
      - gcc-mingw-w64-x86-64
      - gccgo
      - gcov-4.8
      - gengetopt
      - golang-go
      - help2man
      - mingw-w64
      - mingw-w64-tools
      - openjdk-7-jdk
      - openjdk-7-jre-headless
      - python-dev
      - ruby-dev
      - swig
      - xutils-dev
  coverity_scan:
    project:
      name: "frankmorgner/openpace"
      description: "Cryptographic library for EAC version 2"
    notification_email: morgner@informatik.hu-berlin.de
    build_command: make
    branch_pattern: coverity_scan

script:
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then
      make $TARGET;
    fi
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then
      if [ -z "$TARGET" ]; then
        make check;
      elif [ "${TARGET}" == emscripten ]; then
        cd openpace-*_js/bin && js eactest.js && cd -;
      fi
    fi

after_success:
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then
      if [ -z "$TARGET" ]; then
        find . -type f -name '*.gcda' -exec gcov-4.8 {} +;
        bash <(curl -s https://codecov.io/bash);
      fi
    fi

notifications:
  email:
    on_success: change
    on_failure: change
